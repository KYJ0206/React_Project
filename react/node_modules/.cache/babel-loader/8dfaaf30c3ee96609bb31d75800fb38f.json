{"ast":null,"code":"import _slicedToArray from\"/Users/hellodegital/Desktop/React_Project/react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useRef,useState}from'react';import\"./TodoList.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InputBox=function InputBox(_ref){var todoList=_ref.todoList,setTodoList=_ref.setTodoList;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var inputRef=useRef(null);// input 값 가져오기\nvar onChangeInput=function onChangeInput(e){setText(e.target.value);};var onPressSubmitButton=function onPressSubmitButton(e){e.preventDefault();// todoItemList에 값 추가\nvar nextTodoList=todoList.concat({id:todoList.length,text:text,checked:false,deleted:false});setTodoList(nextTodoList);// input 값 초기화 및 포커싱\nsetText('');inputRef.current.focus();};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:onPressSubmitButton,className:\"todoapp__inputbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"todoItem\",value:text,ref:inputRef,placeholder:\"\\uD560 \\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",className:\"todoapp__inputbox-inp\",onChange:onChangeInput}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"todoapp__inputbox-add-btn\",children:\"\\uCD94\\uAC00\"})]});};// props 값 검증\nexport default InputBox;","map":{"version":3,"sources":["/Users/hellodegital/Desktop/React_Project/react/src/components/TodoList/InputBox.jsx"],"names":["React","useRef","useState","InputBox","todoList","setTodoList","text","setText","inputRef","onChangeInput","e","target","value","onPressSubmitButton","preventDefault","nextTodoList","concat","id","length","checked","deleted","current","focus"],"mappings":"qIAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,OAAxC,CAEA,MAAO,iBAAP,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA+B,IAA5BC,CAAAA,QAA4B,MAA5BA,QAA4B,CAAlBC,WAAkB,MAAlBA,WAAkB,CAC9C,cAAwBH,QAAQ,CAAC,EAAD,CAAhC,wCAAOI,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,QAAQ,CAAGP,MAAM,CAAC,IAAD,CAAvB,CAEA;AACA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3BH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACH,CAAD,CAAO,CACjCA,CAAC,CAACI,cAAF,GAEA;AACA,GAAMC,CAAAA,YAAY,CAAGX,QAAQ,CAACY,MAAT,CAAgB,CACnCC,EAAE,CAAEb,QAAQ,CAACc,MADsB,CAEnCZ,IAAI,CAAJA,IAFmC,CAGnCa,OAAO,CAAE,KAH0B,CAInCC,OAAO,CAAE,KAJ0B,CAAhB,CAArB,CAMAf,WAAW,CAACU,YAAD,CAAX,CAEA;AACAR,OAAO,CAAC,EAAD,CAAP,CACAC,QAAQ,CAACa,OAAT,CAAiBC,KAAjB,GACD,CAfD,CAiBA,mBACE,cAAM,QAAQ,CAAET,mBAAhB,CAAqC,SAAS,CAAC,mBAA/C,wBAEE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEP,IAHT,CAIE,GAAG,CAAEE,QAJP,CAKE,WAAW,CAAC,0DALd,CAME,SAAS,CAAC,uBANZ,CAOE,QAAQ,CAAEC,aAPZ,EAFF,cAYE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,2BAAhC,0BAZF,GADF,CAkBD,CA5CD,CA8CA;AAWA,cAAeN,CAAAA,QAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport \"./TodoList.scss\"\n\nconst InputBox = ({ todoList, setTodoList }) => {\n  const [text, setText] = useState('');\n  const inputRef = useRef(null);\n\n  // input 값 가져오기\n  const onChangeInput = (e) => {\n    setText(e.target.value);\n  };\n\n  const onPressSubmitButton = (e) => {\n    e.preventDefault();\n\n    // todoItemList에 값 추가\n    const nextTodoList = todoList.concat({\n      id: todoList.length,\n      text,\n      checked: false,\n      deleted: false,\n    });\n    setTodoList(nextTodoList);\n\n    // input 값 초기화 및 포커싱\n    setText('');\n    inputRef.current.focus();\n  };\n\n  return (\n    <form onSubmit={onPressSubmitButton} className=\"todoapp__inputbox\">\n      {/* 아이템 내용 입력 input */}\n      <input\n        type=\"text\"\n        name=\"todoItem\"\n        value={text}\n        ref={inputRef}\n        placeholder=\"할 일을 입력해주세요\"\n        className=\"todoapp__inputbox-inp\"\n        onChange={onChangeInput}\n      />\n      {/* 입력 후 아이템 추가 버튼 */}\n      <button type=\"submit\" className=\"todoapp__inputbox-add-btn\">\n        추가\n      </button>\n    </form>\n  );\n};\n\n// props 값 검증\nInputBox.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  setTodoList: PropTypes.func.isRequired,\n};\n\nexport default InputBox;"]},"metadata":{},"sourceType":"module"}