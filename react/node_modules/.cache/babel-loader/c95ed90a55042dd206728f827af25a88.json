{"ast":null,"code":"import _slicedToArray from\"/Users/hellodegital/Desktop/React_Project/react/first-my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/Users/hellodegital/Desktop/React_Project/react/first-my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useReducer,useContext,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var TodoStateContext=/*#__PURE__*/createContext(null);var TodoDispatchContext=/*#__PURE__*/createContext(null);var TodoNextIdContext=/*#__PURE__*/createContext(null);function todoReducer(state,action){switch(action.type){case'CREATE':return state.concat(action.todo);case'TOGGLE':return state.map(function(todo){return todo.id===action.id?_objectSpread(_objectSpread({},todo),{},{done:!todo.done}):todo;});case'REMOVE':return state.filter(function(todo){return todo.id!==action.id;});default:return state;}}var initialTodos=[{id:1,text:'두더지 사냥',done:true},{id:2,text:'고라니 사냥',done:false},{id:3,text:'기린 가두기',done:false},{id:4,text:'말 구워 먹기',done:false}];export function TodoProvider(_ref){var children=_ref.children;var _useReducer=useReducer(todoReducer,initialTodos),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var nextId=useRef(5);return/*#__PURE__*/_jsx(TodoStateContext.Provider,{value:state,children:/*#__PURE__*/_jsx(TodoDispatchContext.Provider,{value:dispatch,children:/*#__PURE__*/_jsx(TodoNextIdContext.Provider,{value:nextId,children:children})})});}export function useTodoState(){return useContext(TodoStateContext);}export function useTodoDispatch(){return useContext(TodoDispatchContext);}export function useTodoNextId(){return useContext(TodoNextIdContext);}","map":{"version":3,"sources":["/Users/hellodegital/Desktop/React_Project/react/first-my-app/src/components/ToDoList/TodoContext.jsx"],"names":["React","createContext","useReducer","useContext","useRef","TodoStateContext","TodoDispatchContext","TodoNextIdContext","todoReducer","state","action","type","concat","todo","map","id","done","filter","initialTodos","text","TodoProvider","children","dispatch","nextId","useTodoState","useTodoDispatch","useTodoNextId"],"mappings":"mSAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,UAA3C,CAAuDC,MAAvD,KAAqE,OAArE,C,2CAEA,GAAMC,CAAAA,gBAAgB,cAAGJ,aAAa,CAAC,IAAD,CAAtC,CACA,GAAMK,CAAAA,mBAAmB,cAAGL,aAAa,CAAC,IAAD,CAAzC,CACA,GAAMM,CAAAA,iBAAiB,cAAGN,aAAa,CAAC,IAAD,CAAvC,CAEA,QAASO,CAAAA,WAAT,CAAqBC,KAArB,CAA4BC,MAA5B,CAAoC,CAClC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,QAAL,CACE,MAAOF,CAAAA,KAAK,CAACG,MAAN,CAAaF,MAAM,CAACG,IAApB,CAAP,CACF,IAAK,QAAL,CACE,MAAOJ,CAAAA,KAAK,CAACK,GAAN,CAAU,SAAAD,IAAI,QACnBA,CAAAA,IAAI,CAACE,EAAL,GAAYL,MAAM,CAACK,EAAnB,gCAA6BF,IAA7B,MAAmCG,IAAI,CAAE,CAACH,IAAI,CAACG,IAA/C,GAAwDH,IADrC,EAAd,CAAP,CAGF,IAAK,QAAL,CACE,MAAOJ,CAAAA,KAAK,CAACQ,MAAN,CAAa,SAAAJ,IAAI,QAAIA,CAAAA,IAAI,CAACE,EAAL,GAAYL,MAAM,CAACK,EAAvB,EAAjB,CAAP,CACF,QACE,MAAON,CAAAA,KAAP,CAVJ,CAYD,CAED,GAAMS,CAAAA,YAAY,CAAG,CACnB,CACEH,EAAE,CAAE,CADN,CAEEI,IAAI,CAAE,QAFR,CAGEH,IAAI,CAAE,IAHR,CADmB,CAMnB,CACED,EAAE,CAAE,CADN,CAEEI,IAAI,CAAE,QAFR,CAGEH,IAAI,CAAE,KAHR,CANmB,CAWnB,CACED,EAAE,CAAE,CADN,CAEEI,IAAI,CAAE,QAFR,CAGEH,IAAI,CAAE,KAHR,CAXmB,CAgBnB,CACED,EAAE,CAAE,CADN,CAEEI,IAAI,CAAE,SAFR,CAGEH,IAAI,CAAE,KAHR,CAhBmB,CAArB,CAuBA,MAAO,SAASI,CAAAA,YAAT,MAAoC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CACzC,gBAA0BnB,UAAU,CAACM,WAAD,CAAcU,YAAd,CAApC,4CAAOT,KAAP,iBAAca,QAAd,iBACA,GAAMC,CAAAA,MAAM,CAAGnB,MAAM,CAAC,CAAD,CAArB,CAEA,mBACE,KAAC,gBAAD,CAAkB,QAAlB,EAA2B,KAAK,CAAEK,KAAlC,uBACE,KAAC,mBAAD,CAAqB,QAArB,EAA8B,KAAK,CAAEa,QAArC,uBACE,KAAC,iBAAD,CAAmB,QAAnB,EAA4B,KAAK,CAAEC,MAAnC,UACGF,QADH,EADF,EADF,EADF,CASD,CAED,MAAO,SAASG,CAAAA,YAAT,EAAwB,CAC7B,MAAOrB,CAAAA,UAAU,CAACE,gBAAD,CAAjB,CACD,CAED,MAAO,SAASoB,CAAAA,eAAT,EAA2B,CAChC,MAAOtB,CAAAA,UAAU,CAACG,mBAAD,CAAjB,CACD,CAED,MAAO,SAASoB,CAAAA,aAAT,EAAyB,CAC9B,MAAOvB,CAAAA,UAAU,CAACI,iBAAD,CAAjB,CACD","sourcesContent":["import React, { createContext, useReducer, useContext, useRef } from 'react';\n\nconst TodoStateContext = createContext(null);\nconst TodoDispatchContext = createContext(null);\nconst TodoNextIdContext = createContext(null);\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      return state.concat(action.todo);\n    case 'TOGGLE':\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\n      );\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n    default:\n      return state;\n  }\n}\n\nconst initialTodos = [\n  {\n    id: 1,\n    text: '두더지 사냥',\n    done: true\n  },\n  {\n    id: 2,\n    text: '고라니 사냥',\n    done: false \n  },\n  { \n    id: 3,\n    text: '기린 가두기', \n    done: false \n  },\n  { \n    id: 4, \n    text: '말 구워 먹기', \n    done: false \n  }\n];\n\nexport function TodoProvider({ children }) {\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\n  const nextId = useRef(5);\n\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        <TodoNextIdContext.Provider value={nextId}>\n          {children}\n        </TodoNextIdContext.Provider>\n      </TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  );\n}\n\nexport function useTodoState() {\n  return useContext(TodoStateContext);\n}\n\nexport function useTodoDispatch() {\n  return useContext(TodoDispatchContext);\n}\n\nexport function useTodoNextId() {\n  return useContext(TodoNextIdContext);\n}\n"]},"metadata":{},"sourceType":"module"}