{"ast":null,"code":"var _jsxFileName = \"/Users/hellodegital/Desktop/React_Project/react/first-my-app/src/components/TodoList/InputBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputBox = _ref => {\n  _s();\n\n  let {\n    todoList,\n    setTodoList\n  } = _ref;\n  const [text, setText] = useState('');\n  const inputRef = useRef(null); // input 값 가져오기\n\n  const onChangeInput = e => {\n    setText(e.target.value);\n  };\n\n  const onPressSubmitButton = e => {\n    e.preventDefault(); // todoItemList에 값 추가\n\n    const nextTodoList = todoList.concat({\n      id: todoList.length,\n      text,\n      checked: false,\n      deleted: false\n    });\n    setTodoList(nextTodoList); // input 값 초기화 및 포커싱\n\n    setText('');\n    inputRef.current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onPressSubmitButton,\n    className: \"todoapp__inputbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"todoItem\",\n      value: text,\n      ref: inputRef,\n      placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      className: \"todoapp__inputbox-inp\",\n      onChange: onChangeInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"todoapp__inputbox-add-btn\",\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}; // props 값 검증\n\n\n_s(InputBox, \"tDpPWYj5PTPrXyv8RP+rjcZzn9w=\");\n\n_c = InputBox;\nInputBox.propTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired),\n  setTodoList: PropTypes.func.isRequired\n};\nexport default InputBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputBox\");","map":{"version":3,"sources":["/Users/hellodegital/Desktop/React_Project/react/first-my-app/src/components/TodoList/InputBox.jsx"],"names":["React","useRef","useState","PropTypes","InputBox","todoList","setTodoList","text","setText","inputRef","onChangeInput","e","target","value","onPressSubmitButton","preventDefault","nextTodoList","concat","id","length","checked","deleted","current","focus","propTypes","arrayOf","shape","number","isRequired","string","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,QAAQ,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA8B;AAC9C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMO,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB,CAF8C,CAI9C;;AACA,QAAMS,aAAa,GAAIC,CAAD,IAAO;AAC3BH,IAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAIH,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACI,cAAF,GADiC,CAGjC;;AACA,UAAMC,YAAY,GAAGX,QAAQ,CAACY,MAAT,CAAgB;AACnCC,MAAAA,EAAE,EAAEb,QAAQ,CAACc,MADsB;AAEnCZ,MAAAA,IAFmC;AAGnCa,MAAAA,OAAO,EAAE,KAH0B;AAInCC,MAAAA,OAAO,EAAE;AAJ0B,KAAhB,CAArB;AAMAf,IAAAA,WAAW,CAACU,YAAD,CAAX,CAViC,CAYjC;;AACAR,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAC,IAAAA,QAAQ,CAACa,OAAT,CAAiBC,KAAjB;AACD,GAfD;;AAiBA,sBACE;AAAM,IAAA,QAAQ,EAAET,mBAAhB;AAAqC,IAAA,SAAS,EAAC,mBAA/C;AAAA,4BAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAEP,IAHT;AAIE,MAAA,GAAG,EAAEE,QAJP;AAKE,MAAA,WAAW,EAAC,0DALd;AAME,MAAA,SAAS,EAAC,uBANZ;AAOE,MAAA,QAAQ,EAAEC;AAPZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,2BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA5CD,C,CA8CA;;;GA9CMN,Q;;KAAAA,Q;AA+CNA,QAAQ,CAACoB,SAAT,GAAqB;AACnBnB,EAAAA,QAAQ,EAAEF,SAAS,CAACsB,OAAV,CACRtB,SAAS,CAACuB,KAAV,CAAgB;AACdR,IAAAA,EAAE,EAAEf,SAAS,CAACwB,MAAV,CAAiBC,UADP;AAEdrB,IAAAA,IAAI,EAAEJ,SAAS,CAAC0B,MAAV,CAAiBD;AAFT,GAAhB,EAGGA,UAJK,CADS;AAOnBtB,EAAAA,WAAW,EAAEH,SAAS,CAAC2B,IAAV,CAAeF;AAPT,CAArB;AAUA,eAAexB,QAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst InputBox = ({ todoList, setTodoList }) => {\n  const [text, setText] = useState('');\n  const inputRef = useRef(null);\n\n  // input 값 가져오기\n  const onChangeInput = (e) => {\n    setText(e.target.value);\n  };\n\n  const onPressSubmitButton = (e) => {\n    e.preventDefault();\n\n    // todoItemList에 값 추가\n    const nextTodoList = todoList.concat({\n      id: todoList.length,\n      text,\n      checked: false,\n      deleted: false,\n    });\n    setTodoList(nextTodoList);\n\n    // input 값 초기화 및 포커싱\n    setText('');\n    inputRef.current.focus();\n  };\n\n  return (\n    <form onSubmit={onPressSubmitButton} className=\"todoapp__inputbox\">\n      {/* 아이템 내용 입력 input */}\n      <input\n        type=\"text\"\n        name=\"todoItem\"\n        value={text}\n        ref={inputRef}\n        placeholder=\"할 일을 입력해주세요\"\n        className=\"todoapp__inputbox-inp\"\n        onChange={onChangeInput}\n      />\n      {/* 입력 후 아이템 추가 버튼 */}\n      <button type=\"submit\" className=\"todoapp__inputbox-add-btn\">\n        추가\n      </button>\n    </form>\n  );\n};\n\n// props 값 검증\nInputBox.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  setTodoList: PropTypes.func.isRequired,\n};\n\nexport default InputBox;"]},"metadata":{},"sourceType":"module"}