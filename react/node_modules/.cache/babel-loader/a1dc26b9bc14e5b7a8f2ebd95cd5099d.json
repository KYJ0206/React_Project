{"ast":null,"code":"var _jsxFileName = \"/Users/hellodegital/Desktop/React_Project/react/first-my-app/src/components/TodoList/ToDoitemList.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ToDoItem from './ToDoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoItemList = _ref => {\n  let {\n    title,\n    todoList,\n    setTodoList,\n    checkedList\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp__list\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"todoapp__list-tit\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todoapp__list-ul\",\n      children: todoList && // todoList가 있을때만 출력\n      todoList.map(todoItem => {\n        // 삭제한 항목인 경우, 출력하지 않음 (deleted가 true)\n        if (todoItem.deleted) return null; // checkedList 값에 따라 '할 일 목록' 또는 '완료한 목록'을 출력\n\n        if (checkedList !== todoItem.checked) return null;\n        return (\n          /*#__PURE__*/\n          // map을 이용하여 ToDoItem을 출력\n          _jsxDEV(ToDoItem, {\n            todoItem: todoItem,\n            todoList: todoList,\n            setTodoList: setTodoList\n          }, todoItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ToDoItemList;\nToDoItemList.propTypes = {\n  title: PropTypes.string.isRequired,\n  todoList: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired\n  })),\n  setTodoList: PropTypes.func.isRequired,\n  checkedList: PropTypes.bool.isRequired\n};\nexport default ToDoItemList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoItemList\");","map":{"version":3,"sources":["/Users/hellodegital/Desktop/React_Project/react/first-my-app/src/components/TodoList/ToDoitemList.jsx"],"names":["React","PropTypes","ToDoItem","ToDoItemList","title","todoList","setTodoList","checkedList","map","todoItem","deleted","checked","id","propTypes","string","isRequired","arrayOf","shape","number","text","func","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA;AAAhC,GAAD;AAAA,sBACnB;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BAEE;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA,gBAAkCH;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA,gBACGC,QAAQ,IAAI;AACXA,MAAAA,QAAQ,CAACG,GAAT,CAAcC,QAAD,IAAc;AACzB;AACA,YAAIA,QAAQ,CAACC,OAAb,EAAsB,OAAO,IAAP,CAFG,CAIzB;;AACA,YAAIH,WAAW,KAAKE,QAAQ,CAACE,OAA7B,EAAsC,OAAO,IAAP;AAEtC;AAAA;AACE;AACA,kBAAC,QAAD;AAEE,YAAA,QAAQ,EAAEF,QAFZ;AAGE,YAAA,QAAQ,EAAEJ,QAHZ;AAIE,YAAA,WAAW,EAAEC;AAJf,aACOG,QAAQ,CAACG,EADhB;AAAA;AAAA;AAAA;AAAA;AAFF;AASD,OAhBD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADmB;AAAA,CAArB;;KAAMT,Y;AA4BNA,YAAY,CAACU,SAAb,GAAyB;AACvBT,EAAAA,KAAK,EAAEH,SAAS,CAACa,MAAV,CAAiBC,UADD;AAEvBV,EAAAA,QAAQ,EAAEJ,SAAS,CAACe,OAAV,CACRf,SAAS,CAACgB,KAAV,CAAgB;AACdL,IAAAA,EAAE,EAAEX,SAAS,CAACiB,MAAV,CAAiBH,UADP;AAEdI,IAAAA,IAAI,EAAElB,SAAS,CAACa,MAAV,CAAiBC;AAFT,GAAhB,CADQ,CAFa;AAQvBT,EAAAA,WAAW,EAAEL,SAAS,CAACmB,IAAV,CAAeL,UARL;AASvBR,EAAAA,WAAW,EAAEN,SAAS,CAACoB,IAAV,CAAeN;AATL,CAAzB;AAYA,eAAeZ,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ToDoItem from './ToDoItem';\n\nconst ToDoItemList = ({ title, todoList, setTodoList, checkedList }) => (\n  <div className=\"todoapp__list\">\n    {/* props로 부터 title 값을 전달 받음 */}\n    <p className=\"todoapp__list-tit\">{title}</p>\n\n    <ul className=\"todoapp__list-ul\">\n      {todoList && // todoList가 있을때만 출력\n        todoList.map((todoItem) => {\n          // 삭제한 항목인 경우, 출력하지 않음 (deleted가 true)\n          if (todoItem.deleted) return null;\n\n          // checkedList 값에 따라 '할 일 목록' 또는 '완료한 목록'을 출력\n          if (checkedList !== todoItem.checked) return null;\n\n          return (\n            // map을 이용하여 ToDoItem을 출력\n            <ToDoItem\n              key={todoItem.id}\n              todoItem={todoItem}\n              todoList={todoList}\n              setTodoList={setTodoList}\n            />\n          );\n        })}\n    </ul>\n  </div>\n);\n\nToDoItemList.propTypes = {\n  title: PropTypes.string.isRequired,\n  todoList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ),\n  setTodoList: PropTypes.func.isRequired,\n  checkedList: PropTypes.bool.isRequired,\n};\n\nexport default ToDoItemList;"]},"metadata":{},"sourceType":"module"}