{"ast":null,"code":"import React from'react';import ToDoItem from'./ToDoItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ToDoItemList=function ToDoItemList(_ref){var title=_ref.title,todoList=_ref.todoList,setTodoList=_ref.setTodoList,checkedList=_ref.checkedList;return/*#__PURE__*/_jsxs(\"div\",{className:\"todoapp__list\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"todoapp__list-tit\",children:title}),/*#__PURE__*/_jsx(\"ul\",{className:\"todoapp__list-ul\",children:todoList&&// todoList가 있을때만 출력\ntodoList.map(function(todoItem){// 삭제한 항목인 경우, 출력하지 않음 (deleted가 true)\nif(todoItem.deleted)return null;// checkedList 값에 따라 '할 일 목록' 또는 '완료한 목록'을 출력\nif(checkedList!==todoItem.checked)return null;return/*#__PURE__*/ (// map을 이용하여 ToDoItem을 출력\n_jsx(ToDoItem,{todoItem:todoItem,todoList:todoList,setTodoList:setTodoList},todoItem.id));})})]});};export default ToDoItemList;","map":{"version":3,"sources":["/Users/hellodegital/Desktop/React_Project/react/src/components/TodoList/ToDoitemList.jsx"],"names":["React","ToDoItem","ToDoItemList","title","todoList","setTodoList","checkedList","map","todoItem","deleted","checked","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUC,QAAV,MAAUA,QAAV,CAAoBC,WAApB,MAAoBA,WAApB,CAAiCC,WAAjC,MAAiCA,WAAjC,oBACnB,aAAK,SAAS,CAAC,eAAf,wBAEE,UAAG,SAAS,CAAC,mBAAb,UAAkCH,KAAlC,EAFF,cAIE,WAAI,SAAS,CAAC,kBAAd,UACGC,QAAQ,EAAI;AACXA,QAAQ,CAACG,GAAT,CAAa,SAACC,QAAD,CAAc,CACzB;AACA,GAAIA,QAAQ,CAACC,OAAb,CAAsB,MAAO,KAAP,CAEtB;AACA,GAAIH,WAAW,GAAKE,QAAQ,CAACE,OAA7B,CAAsC,MAAO,KAAP,CAEtC,oBACE;AACA,KAAC,QAAD,EAEE,QAAQ,CAAEF,QAFZ,CAGE,QAAQ,CAAEJ,QAHZ,CAIE,WAAW,CAAEC,WAJf,EACOG,QAAQ,CAACG,EADhB,CAFF,EASD,CAhBD,CAFJ,EAJF,GADmB,EAArB,CAwCA,cAAeT,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ToDoItem from './ToDoItem';\n\nconst ToDoItemList = ({ title, todoList, setTodoList, checkedList }) => (\n  <div className=\"todoapp__list\">\n    {/* props로 부터 title 값을 전달 받음 */}\n    <p className=\"todoapp__list-tit\">{title}</p>\n\n    <ul className=\"todoapp__list-ul\">\n      {todoList && // todoList가 있을때만 출력\n        todoList.map((todoItem) => {\n          // 삭제한 항목인 경우, 출력하지 않음 (deleted가 true)\n          if (todoItem.deleted) return null;\n\n          // checkedList 값에 따라 '할 일 목록' 또는 '완료한 목록'을 출력\n          if (checkedList !== todoItem.checked) return null;\n\n          return (\n            // map을 이용하여 ToDoItem을 출력\n            <ToDoItem\n              key={todoItem.id}\n              todoItem={todoItem}\n              todoList={todoList}\n              setTodoList={setTodoList}\n            />\n          );\n        })}\n    </ul>\n  </div>\n);\n\nToDoItemList.propTypes = {\n  title: PropTypes.string.isRequired,\n  todoList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ),\n  setTodoList: PropTypes.func.isRequired,\n  checkedList: PropTypes.bool.isRequired,\n};\n\nexport default ToDoItemList;"]},"metadata":{},"sourceType":"module"}