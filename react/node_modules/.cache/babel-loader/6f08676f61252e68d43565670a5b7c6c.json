{"ast":null,"code":"import _slicedToArray from\"/Users/hellodegital/Desktop/React_Project/react/first-my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/Users/hellodegital/Desktop/React_Project/react/first-my-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useState}from'react';import styled,{css}from'styled-components';import{MdAdd}from'react-icons/md';import{useTodoDispatch,useTodoNextId}from'./TodoContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CircleButton=styled.button(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: #38d9a9;\\n  &:hover {\\n    background: #63e6be;\\n  }\\n  &:active {\\n    background: #20c997;\\n  }\\n\\n  z-index: 5;\\n  cursor: pointer;\\n  width: 50px;\\n  height: 50px;\\n  display: block;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 60px;\\n  position: absolute;\\n  right: 8px;\\n  bottom: 6.5%;\\n  transform: translate(-50%, 50%);\\n  color: white;\\n  border-radius: 50%;\\n  border: none;\\n  outline: none;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n\\n  transition: 0.125s all ease-in;\\n  \",\"\\n\"])),function(props){return props.open&&css(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n      background: #ff6b6b;\\n      &:hover {\\n        background: #ff8787;\\n      }\\n      &:active {\\n        background: #fa5252;\\n      }\\n      transform: translate(-50%, 50%) rotate(45deg);\\n    \"])));});var InsertFormPositioner=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n\"])));var InsertForm=styled.form(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  background: #f8f9fa;\\n  padding-left: 32px;\\n  padding-top: 32px;\\n  padding-right: 32px;\\n  padding-bottom: 100px;\\n\\n  border-bottom-left-radius: 16px;\\n  border-bottom-right-radius: 16px;\\n  border-top: 1px solid #e9ecef;\\n\"])));var Input=styled.input(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  padding: 12px;\\n  border-radius: 4px;\\n  border: 1px solid #dee2e6;\\n  width: 100%;\\n  outline: none;\\n  font-size: 18px;\\n  box-sizing: border-box;\\n\"])));function TodoCreate(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setValue=_useState4[1];var dispatch=useTodoDispatch();var nextId=useTodoNextId();var onToggle=function onToggle(){return setOpen(!open);};var onChange=function onChange(e){return setValue(e.target.value);};var onSubmit=function onSubmit(e){e.preventDefault();dispatch({type:'CREATE',todo:{id:nextId.current,text:value,done:false}});nextId.current+=1;setOpen(false);setValue('');};return/*#__PURE__*/_jsxs(_Fragment,{children:[open&&/*#__PURE__*/_jsx(InsertFormPositioner,{children:/*#__PURE__*/_jsx(InsertForm,{onSubmit:onSubmit,children:/*#__PURE__*/_jsx(Input,{autoFocus:true,onChange:onChange,value:value,placeholder:\"\\uD560 \\uC77C\\uC744 \\uC785\\uB825 \\uD6C4, Enter \\uB97C \\uB204\\uB974\\uC138\\uC694\"})})}),/*#__PURE__*/_jsx(CircleButton,{onClick:onToggle,open:open,children:/*#__PURE__*/_jsx(MdAdd,{})})]});}export default/*#__PURE__*/React.memo(TodoCreate);","map":{"version":3,"sources":["/Users/hellodegital/Desktop/React_Project/react/first-my-app/src/components/ToDoList/TodoCreate.jsx"],"names":["React","useState","styled","css","MdAdd","useTodoDispatch","useTodoNextId","CircleButton","button","props","open","InsertFormPositioner","div","InsertForm","form","Input","input","TodoCreate","setOpen","value","setValue","dispatch","nextId","onToggle","onChange","e","target","onSubmit","preventDefault","type","todo","id","current","text","done","memo"],"mappings":"4YAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,EAAiBC,GAAjB,KAA4B,mBAA5B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,eAAT,CAA0BC,aAA1B,KAA+C,eAA/C,C,6IAEA,GAAMC,CAAAA,YAAY,CAAGL,MAAM,CAACM,MAAV,6mBA8Bd,SAAAC,KAAK,QACLA,CAAAA,KAAK,CAACC,IAAN,EACAP,GADA,4QADK,EA9BS,CAAlB,CA4CA,GAAMQ,CAAAA,oBAAoB,CAAGT,MAAM,CAACU,GAAV,sIAA1B,CAOA,GAAMC,CAAAA,UAAU,CAAGX,MAAM,CAACY,IAAV,ySAAhB,CAYA,GAAMC,CAAAA,KAAK,CAAGb,MAAM,CAACc,KAAV,6NAAX,CAUA,QAASC,CAAAA,UAAT,EAAsB,CACpB,cAAwBhB,QAAQ,CAAC,KAAD,CAAhC,wCAAOS,IAAP,eAAaQ,OAAb,eACA,eAA0BjB,QAAQ,CAAC,EAAD,CAAlC,yCAAOkB,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,QAAQ,CAAGhB,eAAe,EAAhC,CACA,GAAMiB,CAAAA,MAAM,CAAGhB,aAAa,EAA5B,CAEA,GAAMiB,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAML,CAAAA,OAAO,CAAC,CAACR,IAAF,CAAb,EAAjB,CACA,GAAMc,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,QAAIL,CAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAAZ,EAAlB,CACA,GAAMQ,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAF,CAAC,CAAI,CACpBA,CAAC,CAACG,cAAF,GACAP,QAAQ,CAAC,CACPQ,IAAI,CAAE,QADC,CAEPC,IAAI,CAAE,CACJC,EAAE,CAAET,MAAM,CAACU,OADP,CAEJC,IAAI,CAAEd,KAFF,CAGJe,IAAI,CAAE,KAHF,CAFC,CAAD,CAAR,CAQAZ,MAAM,CAACU,OAAP,EAAkB,CAAlB,CACAd,OAAO,CAAC,KAAD,CAAP,CACAE,QAAQ,CAAC,EAAD,CAAR,CACD,CAbD,CAeA,mBACE,2BACGV,IAAI,eACH,KAAC,oBAAD,wBACE,KAAC,UAAD,EAAY,QAAQ,CAAEiB,QAAtB,uBACE,KAAC,KAAD,EACE,SAAS,KADX,CAEE,QAAQ,CAAEH,QAFZ,CAGE,KAAK,CAAEL,KAHT,CAIE,WAAW,CAAC,gFAJd,EADF,EADF,EAFJ,cAaE,KAAC,YAAD,EAAc,OAAO,CAAEI,QAAvB,CAAiC,IAAI,CAAEb,IAAvC,uBACE,KAAC,KAAD,IADF,EAbF,GADF,CAmBD,CAED,2BAAeV,KAAK,CAACmC,IAAN,CAAWlB,UAAX,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from './TodoContext';\n\nconst CircleButton = styled.button`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 50px;\n  height: 50px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  right: 8px;\n  bottom: 6.5%;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: 0.125s all ease-in;\n  ${props =>\n    props.open &&\n    css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding-left: 32px;\n  padding-top: 32px;\n  padding-right: 32px;\n  padding-bottom: 100px;\n\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState('');\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n  const onChange = e => setValue(e.target.value);\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch({\n      type: 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false\n      }\n    });\n    nextId.current += 1;\n    setOpen(false);\n    setValue('');\n  };\n\n  return (\n    <>\n      {open && (\n        <InsertFormPositioner>\n          <InsertForm onSubmit={onSubmit}>\n            <Input\n              autoFocus\n              onChange={onChange}\n              value={value}\n              placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\n            />\n          </InsertForm>\n        </InsertFormPositioner>\n      )}\n      <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButton>\n    </>\n  );\n}\n\nexport default React.memo(TodoCreate);"]},"metadata":{},"sourceType":"module"}